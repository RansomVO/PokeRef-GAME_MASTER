// ***** This is for GAME_MASTER files. *****
// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: FortDeployPokemonResponse.proto

#pragma warning disable CS1591, CS0612, CS3021, IDE1006
namespace POGOProtos.Networking.Responses
{

    [global::ProtoBuf.ProtoContract()]
    public partial class FortDeployPokemonResponse : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [global::ProtoBuf.ProtoMember(1)]
        public Result result { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public FortDetailsResponse fort_details { get; set; }

        [global::ProtoBuf.ProtoMember(3)]
        public global::POGOProtos.Data.PokemonData pokemon_data { get; set; }

        [global::ProtoBuf.ProtoMember(4)]
        public global::POGOProtos.Data.Gym.GymState gym_state { get; set; }

        [global::ProtoBuf.ProtoContract()]
        public enum Result
        {
            NO_RESULT_SET = 0,
            SUCCESS = 1,
            ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2,
            ERROR_OPPOSING_TEAM_OWNS_FORT = 3,
            ERROR_FORT_IS_FULL = 4,
            ERROR_NOT_IN_RANGE = 5,
            ERROR_PLAYER_HAS_NO_TEAM = 6,
            ERROR_POKEMON_NOT_FULL_HP = 7,
            ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8,
            ERROR_POKEMON_IS_BUDDY = 9,
            ERROR_FORT_DEPLOY_LOCKOUT = 10,
            ERROR_PLAYER_HAS_NO_NICKNAME = 11,
            ERROR_POI_INACCESSIBLE = 12,
            ERROR_LEGENDARY_POKEMON = 13,
            ERROR_INVALID_POKEMON = 14,
        }

    }

}

#pragma warning restore CS1591, CS0612, CS3021, IDE1006
