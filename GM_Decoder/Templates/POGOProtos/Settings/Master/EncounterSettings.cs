// ***** This is for GAME_MASTER files. *****
// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: EncounterSettings.proto

#pragma warning disable CS1591, CS0612, CS3021, IDE1006
namespace POGOProtos.Settings.Master
{

    [global::ProtoBuf.ProtoContract()]
    public partial class EncounterSettings : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public float spin_bonus_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public float excellent_throw_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(3)]
        public float great_throw_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(4)]
        public float nice_throw_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(5)]
        public int milestone_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(6)]
        public bool ar_plus_mode_enabled { get; set; }

        [global::ProtoBuf.ProtoMember(7)]
        public float ar_close_proximity_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(8)]
        public float ar_low_awareness_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(9)]
        public float ar_close_proximity_multiplier { get; set; }

        [global::ProtoBuf.ProtoMember(10)]
        public float ar_awareness_penalty_threshold { get; set; }

        [global::ProtoBuf.ProtoMember(11)]
        public float ar_low_awareness_max_multiplier { get; set; }

        [global::ProtoBuf.ProtoMember(12)]
        public float ar_high_awareness_min_penalty_multiplier { get; set; }

        [global::ProtoBuf.ProtoMember(13)]
        public int ar_plus_attempts_until_flee_max { get; set; }

        [global::ProtoBuf.ProtoMember(14)]
        public int ar_plus_attempts_until_flee_infinite { get; set; }

        [global::ProtoBuf.ProtoMember(15)]
        public float escaped_bonus_multiplier_max { get; set; }

        [global::ProtoBuf.ProtoMember(16)]
        public float escaped_bonus_multiplier_by_excellent_throw { get; set; }

        [global::ProtoBuf.ProtoMember(17)]
        public float escaped_bonus_multiplier_by_great_throw { get; set; }

        [global::ProtoBuf.ProtoMember(18)]
        public float escaped_bonus_multiplier_by_nice_throw { get; set; }

    }

}

#pragma warning restore CS1591, CS0612, CS3021, IDE1006
